[tool:pytest]
# Pytest Configuration for CV Processing Engine Test Suite

# Test discovery
testpaths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --cov=shared_code
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --html=reports/pytest_report.html
    --self-contained-html
    --junitxml=reports/junit.xml
    --json-report
    --json-report-file=reports/report.json

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    performance: Performance and load tests
    slow: Tests that take more than 1 second to run
    external: Tests that require external services
    pii: Tests related to PII handling and anonymization
    document: Tests related to document processing
    ai: Tests related to AI service calls
    error: Tests for error handling scenarios

# Test filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Minimum Python version
minversion = 3.8

# Coverage settings
[coverage:run]
source = shared_code
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
